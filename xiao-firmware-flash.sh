#!/bin/bash

# XIAO-SENSE УЄфтІЋсЃЋсѓАсЃ╝сЃасѓдсѓДсѓбУ╗бжђЂсѓ╣сѓ»сЃфсЃЌсЃѕ
# сЃЋсЃГсЃ╝: reset Рєњ R Рєњ reset Рєњ L

set -e

# УЅ▓С╗ўсЂЇсЃГсѓ░тЄ║тіЏ
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
BOLD='\033[1m'
NC='\033[0m' # No Color

# жЪ│тБ░тЄ║тіЏ
say_jp() {
    # TerminatedсЃАсЃЃсѓ╗сЃ╝сѓИсѓњжў▓сЂљсЂЪсѓЂсђЂжЪ│тБ░сѓњжаєТгАтєЇућЪ
    say -v Kyoko "$1" >/dev/null 2>&1 || true
}

# у░АТйћсЂфсЃГсѓ░тЄ║тіЏ
log_step() {
    echo -e "${BOLD}${CYAN}$1${NC}"
}

log_success() {
    echo -e "${GREEN}РюЁ $1${NC}"
}

log_error() {
    echo -e "${RED}РЮї $1${NC}"
}

# тІЋуџёсѓ╣сЃћсЃісЃ╝
spinner() {
    local pid=$!
    local delay=0.1
    local spinstr='|/-\'
    while [ "$(ps a | awk '{print $1}' | grep $pid)" ]; do
        local temp=${spinstr#?}
        printf "\r${CYAN}[%c] $1${NC}" "$spinstr"
        local spinstr=$temp${spinstr%"$temp"}
        sleep $delay
    done
    printf "\r"
}

# УеГт«џ
MOUNT_POINT="/Volumes/XIAO-SENSE"
DOWNLOADS_DIR="$HOME/Downloads"
DRY_RUN=false

# Сй┐ућеТќ╣Т│ЋсѓњУАеуц║
usage() {
    echo "Сй┐ућеТќ╣Т│Ћ: $0 [сѓфсЃЌсѓисЃДсЃ│]"
    echo "сѓфсЃЌсѓисЃДсЃ│:"
    echo "  --dry-run    т«ЪжџЏсЂ«сѓ│сЃћсЃ╝сЂ»УАїсѓЈсЂџсђЂтІЋСйюуб║УфЇсЂ«сЂ┐"
    echo "  --help       сЃўсЃФсЃЌсѓњУАеуц║"
    exit 1
}

# т╝ЋТЋ░УДБТъљ
while [[ $# -gt 0 ]]; do
    case $1 in
        --dry-run)
            DRY_RUN=true
            echo "${YELLOW}­ЪДф сЃЅсЃЕсѓцсЃЕсЃ│сЃбсЃ╝сЃЅ${NC}"
            shift
            ;;
        --help)
            usage
            ;;
        *)
            log_error "СИЇТўјсЂфсѓфсЃЌсѓисЃДсЃ│: $1"
            usage
            ;;
    esac
done

# ТюђТќ░сЂ«сЃЋсѓАсЃ╝сЃасѓдсѓДсѓбсЃЋсѓЕсЃФсЃђсѓњТцютЄ║
find_latest_firmware() {
    local latest_num=0
    local latest_dir=""
    
    # firmwareсЃЋсѓЕсЃФсЃђсѓњсЃЂсѓДсЃЃсѓ»
    if [[ -d "$DOWNLOADS_DIR/firmware" ]]; then
        latest_dir="$DOWNLOADS_DIR/firmware"
    fi
    
    # firmware (N) тйбт╝ЈсЂ«сЃЋсѓЕсЃФсЃђсѓњсЃЂсѓДсЃЃсѓ»
    for dir in "$DOWNLOADS_DIR"/firmware\ \(*\); do
        if [[ -d "$dir" ]]; then
            # ТІгт╝ДтєЁсЂ«ТЋ░тГЌсѓњТійтЄ║
            if [[ "$dir" =~ firmware\ \(([0-9]+)\)$ ]]; then
                local num=${BASH_REMATCH[1]}
                if (( num > latest_num )); then
                    latest_num=$num
                    latest_dir="$dir"
                fi
            fi
        fi
    done
    
    if [[ -n "$latest_dir" ]]; then
        echo "$latest_dir"
    else
        log_error "сЃЋсѓАсЃ╝сЃасѓдсѓДсѓбсЃЋсѓЕсЃФсЃђсЂїУдІсЂцсЂІсѓісЂЙсЂЏсѓЊ"
        exit 1
    fi
}

# сЃЋсѓАсЃ╝сЃасѓдсѓДсѓбсЃЋсѓАсѓцсЃФсЂ«тГўтюеуб║УфЇ
check_firmware_files() {
    local firmware_dir="$1"
    local reset_file="$firmware_dir/settings_reset-seeeduino_xiao_ble-zmk.uf2"
    local left_file="$firmware_dir/moNa2_L rgbled_adapter-seeeduino_xiao_ble-zmk.uf2"
    local right_file="$firmware_dir/moNa2_R rgbled_adapter-seeeduino_xiao_ble-zmk.uf2"
    
    if [[ ! -f "$reset_file" ]]; then
        log_error "сЃфсѓ╗сЃЃсЃѕсЃЋсѓАсѓцсЃФсЂїУдІсЂцсЂІсѓісЂЙсЂЏсѓЊ"
        exit 1
    fi
    
    if [[ ! -f "$left_file" ]]; then
        log_error "тидтЂ┤сЃЋсѓАсЃ╝сЃасѓдсѓДсѓбсЂїУдІсЂцсЂІсѓісЂЙсЂЏсѓЊ"
        exit 1
    fi
    
    if [[ ! -f "$right_file" ]]; then
        log_error "тЈ│тЂ┤сЃЋсѓАсЃ╝сЃасѓдсѓДсѓбсЂїУдІсЂцсЂІсѓісЂЙсЂЏсѓЊ"
        exit 1
    fi
    
    log_success "сЃЋсѓАсѓцсЃФуб║УфЇт«їС║є"
}

# сЃъсѓдсЃ│сЃѕтЙЁсЂА
wait_for_mount() {
    local step="$1"
    local device_name="$2"
    local instruction="$3"
    
    echo ""
    log_step "[$step/4] $device_name"
    echo "­ЪЊІ $instruction"
    
    case "$step" in
        "1") say_jp "тЈ│сѓГсЃ╝сЃюсЃ╝сЃЅсѓњТјЦуХџ" ;;
        "2") say_jp "тєЇт║дтЈ│сѓГсЃ╝сЃюсЃ╝сЃЅсѓњТјЦуХџ" ;;
        "3") say_jp "тидсѓГсЃ╝сЃюсЃ╝сЃЅсѓњТјЦуХџ" ;;
        "4") say_jp "тєЇт║дтидсѓГсЃ╝сЃюсЃ╝сЃЅсѓњТјЦуХџ" ;;
    esac
    
    local count=0
    while [[ ! -d "$MOUNT_POINT" ]]; do
        printf "\r\033[K${YELLOW}РЈ│ ТјЦуХџтЙЁсЂА %ds (сЃфсѓ╗сЃЃсЃѕсЃюсѓ┐сЃ│2тЏъТі╝сЂЌРєњUSB)${NC}" $count
        sleep 1
        ((count++))
    done
    
    printf "\r\033[K${GREEN}РюЁ ТјЦуХџуб║УфЇ! XIAO-SENSEТцютЄ║${NC}\n"
    say_jp "ТјЦуХџуб║УфЇ"
    sleep 1
}

# сЃЋсѓАсЃ╝сЃасѓдсѓДсѓбсѓ│сЃћсЃ╝
copy_firmware() {
    local src_file="$1"
    local description="$2"
    
    if [[ ! -f "$src_file" ]]; then
        log_error "сЃЋсѓАсѓцсЃФсЂїУдІсЂцсЂІсѓісЂЙсЂЏсѓЊ: $src_file"
        exit 1
    fi
    
    if [[ "$DRY_RUN" == "true" ]]; then
        echo "${YELLOW}[DRY RUN] $description${NC}"
        return 0
    fi
    
    # сѓ│сЃћсЃ╝тЄдуљє
    printf "${CYAN}­ЪЊЂ $description сѓњТЏИсЂЇУЙ╝сЂ┐СИГ...${NC}"
    cp "$src_file" "$MOUNT_POINT/" 2>/dev/null || true
    printf "\r\033[K${GREEN}РюЁ $description т«їС║є${NC}\n"
    
    case "$description" in
        *"сЃфсѓ╗сЃЃсЃѕ"*) say_jp "сЃфсѓ╗сЃЃсЃѕт«їС║є" ;;
        *"тЈ│"*) say_jp "тЈ│сЃЋсѓАсЃ╝сЃасѓдсѓДсѓбУ╗бжђЂт«їС║є" ;;
        *"тид"*) say_jp "тидсЃЋсѓАсЃ╝сЃасѓдсѓДсѓбУ╗бжђЂт«їС║є" ;;
    esac
    
    # сѓбсЃ│сЃъсѓдсЃ│сЃѕтЙЁсЂА
    local count=0
    while [[ -d "$MOUNT_POINT" ]]; do
        printf "\r\033[K${CYAN}РЈ│ УЄфтІЋтѕЄТќГтЙЁсЂА... %ds${NC}" $count
        sleep 1
        ((count++))
    done
    
    printf "\r\033[K${GREEN}­Ъћї тѕЄТќГт«їС║є!${NC}\n"
    say_jp "тѕЄТќГт«їС║є"
    sleep 1
}

# сЃАсѓцсЃ│тЄдуљє
main() {
    echo -e "${BOLD}${CYAN}­Ъџђ XIAO-SENSE УЄфтІЋсЃЋсѓАсЃ╝сЃасѓдсѓДсѓбУ╗бжђЂ${NC}"
    echo ""
    say_jp "сЃЋсѓАсЃ╝сЃасѓдсѓДсѓбсѓњУ╗бжђЂсЂЌсЂЙсЂЎ"
    
    # ТюђТќ░сЃЋсѓАсЃ╝сЃасѓдсѓДсѓбТцютЄ║
    firmware_dir=$(find_latest_firmware)
    echo "­ЪЊд сЃЋсѓЕсЃФсЃђ: $(basename "$firmware_dir")"
    
    # сЃЋсѓАсЃ╝сЃасѓдсѓДсѓбсЃЋсѓАсѓцсЃФуб║УфЇ
    check_firmware_files "$firmware_dir"
    
    # сЃЋсѓАсЃ╝сЃасѓдсѓДсѓбсЃЉсѓ╣УеГт«џ
    reset_file="$firmware_dir/settings_reset-seeeduino_xiao_ble-zmk.uf2"
    left_file="$firmware_dir/moNa2_L rgbled_adapter-seeeduino_xiao_ble-zmk.uf2"
    right_file="$firmware_dir/moNa2_R rgbled_adapter-seeeduino_xiao_ble-zmk.uf2"
    
    echo -e "${YELLOW}­Ъћё ТЅІжає: тЈ│сЃфсѓ╗сЃЃсЃѕ Рєњ тЈ│RТЏИсЂЇУЙ╝сЂ┐ Рєњ тидсЃфсѓ╗сЃЃсЃѕ Рєњ тидLТЏИсЂЇУЙ╝сЂ┐${NC}"
    
    # Step 1: тЈ│сѓГсЃ╝сЃюсЃ╝сЃЅсѓњТјЦуХџсЂЌсЂдсЃфсѓ╗сЃЃсЃѕ
    wait_for_mount "1" "тЈ│№╝ѕсЃфсѓ╗сЃЃсЃѕ№╝Ѕ" "тЈ│сѓГсЃ╝сЃюсЃ╝сЃЅсѓњТјЦуХџ"
    copy_firmware "$reset_file" "сЃфсѓ╗сЃЃсЃѕсЃЋсѓАсЃ╝сЃасѓдсѓДсѓб"
    
    # Step 2: тЈ│сѓГсЃ╝сЃюсЃ╝сЃЅсѓњТјЦуХџсЂЌсЂдтЈ│сЃЋсѓАсЃ╝сЃасѓдсѓДсѓбУ╗бжђЂ
    wait_for_mount "2" "тЈ│№╝ѕRТЏИсЂЇУЙ╝сЂ┐№╝Ѕ" "тЈ│сѓГсЃ╝сЃюсЃ╝сЃЅсѓњТјЦуХџ"
    copy_firmware "$right_file" "тЈ│сЃЋсѓАсЃ╝сЃасѓдсѓДсѓб"
    
    # Step 3: тидсѓГсЃ╝сЃюсЃ╝сЃЅсѓњТјЦуХџсЂЌсЂдсЃфсѓ╗сЃЃсЃѕ
    wait_for_mount "3" "тид№╝ѕсЃфсѓ╗сЃЃсЃѕ№╝Ѕ" "тидсѓГсЃ╝сЃюсЃ╝сЃЅсѓњТјЦуХџ"
    copy_firmware "$reset_file" "сЃфсѓ╗сЃЃсЃѕсЃЋсѓАсЃ╝сЃасѓдсѓДсѓб"
    
    # Step 4: тидсѓГсЃ╝сЃюсЃ╝сЃЅсѓњТјЦуХџсЂЌсЂдтидсЃЋсѓАсЃ╝сЃасѓдсѓДсѓбУ╗бжђЂ
    wait_for_mount "4" "тид№╝ѕLТЏИсЂЇУЙ╝сЂ┐№╝Ѕ" "тидсѓГсЃ╝сЃюсЃ╝сЃЅсѓњТјЦуХџ"
    copy_firmware "$left_file" "тидсЃЋсѓАсЃ╝сЃасѓдсѓДсѓб"
    
    echo ""
    log_success "сЃЋсѓАсЃ╝сЃасѓдсѓДсѓбУ╗бжђЂт«їС║є№╝Ђ"
    say_jp "сЂЎсЂ╣сЂдсЂ«У╗бжђЂсЂїт«їС║єсЂЌсЂЙсЂЌсЂЪсђѓсѓГсЃ╝сЃюсЃ╝сЃЅсѓњсЃєсѓ╣сЃѕ"
    echo "­Ъј╣ ZMKсѓГсЃ╝сЃюсЃ╝сЃЅсЂ«тІЋСйюуб║УфЇ"
}

# т«ЪУАї
main "$@"